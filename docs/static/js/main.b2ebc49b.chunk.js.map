{"version":3,"sources":["assets/landscape.jpg","reducers/index.js","components/Note.js","components/Organizer.js","actions/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","initialState","db","noteTitle","notes","title","details","children","childTitle","childDetail","divState","combineReducers","crudDB","state","action","type","Note","note","Card","style","padding","margin","float","backgroundColor","border","Breadcrumb","Item","map","child","j","key","marginLeft","connect","ownProps","dispatch","onClickTriggerAction","x","Container","color","i","console","log","App","className","Boolean","window","location","hostname","match","store","createStore","rootReducer","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b2ebc49b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/landscape.d96347d8.jpg\";","import {combineReducers} from 'redux'\n// import {setVisibilityFilter, createList, createNote} from '../actions'\n\nconst initialState = {\n    db:[\n      {\n        noteTitle:\"NEEDS\",\n        notes:[\n          {\n            title:\"Food\",\n            details:[\n              \"some detail\"\n            ],\n            children:[\n              {\n                childTitle:\"child title 0\",\n                childDetail:\"child detail 0\"\n              }\n            ]\n          },\n          {\n            title:\"Water\",\n            details:[\n              \"some detail\"\n            ],\n            children:[\n              {\n                childTitle:\"child title 1\",\n                childDetail:\"child detail 1\"\n              }\n            ],\n          },\n          {\n            title:\"Shelter\",\n            details:[\n              \"some detail\"\n            ],\n            children:[\n              {\n                childTitle:\"child title\",\n                childDetail:\"child detail\"\n              }\n            ],\n          },\n          {\n            title:\"Creativity\",\n            details:[\n              \"some detail\"\n            ],\n            children:[\n              {\n                childTitle:\"child title\",\n                childDetail:\"child detail\"\n              }\n            ],\n          },\n          {\n            title:\"Purpose\",\n            details:[\n              \"some detail\"\n            ],\n            children:[\n              {\n                childTitle:\"child title\",\n                childDetail:\"child detail\"\n              }\n            ],\n          },\n          {\n            title:\"Education\",\n            details:[\n              \"some detail\"\n            ],\n            children:[\n              {\n                childTitle:\"child title\",\n                childDetail:\"child detail\"\n              }\n            ],\n          },\n          {\n            title:\"Communication\",\n            details:[\n              \"some detail\"\n            ],\n            children:[\n              {\n                childTitle:\"child title\",\n                childDetail:\"child detail\"\n              }\n            ],\n          },\n          {\n            title:\"Information\",\n            details:[\n              \"some detail\"\n            ],\n            children:[\n              {\n                childTitle:\"child title\",\n                childDetail:\"child detail\"\n              }\n            ],\n          },\n          {\n            title:\"Travel\",\n            details:[\n              \"some detail\"\n            ],\n            children:[\n              {\n                childTitle:\"child title\",\n                childDetail:\"child detail\"\n              }\n            ],\n          },\n        ],\n      }\n    ],\n    divState:\"none\"\n}\n\nconst crudDB = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_VISIBILITY_FILTER':\n      return {...state, divState:action.divState}\n    case 'CREATE_LIST':\n      return {...state, notes:action.notes}\n    case 'CREATE_NOTE':\n      return {...state, notes:action.notes}\n    default:\n      return state\n  }\n}\n\n\nexport default combineReducers({\n  crudDB\n})\n","import React from 'react'\nimport {\n  Container,\n  Card,\n  Breadcrumb,\n  Button,\n  Image,\n  Modal,\n  Form,\n  Col} from 'react-bootstrap'\nimport landscape from '../assets/landscape.jpg'\n\nlet Note = (note) => {\n   return(\n     <Card\n      style={{\n        padding:\"2px\",\n        margin:\"0.25rem\",\n        float:\"left\",\n        backgroundColor:\"rgba(255,255,255,0)\",\n        border:\"none\"}}>\n      <Breadcrumb style={{padding:\"2px\" }}>\n        <Breadcrumb.Item>{note.title}</Breadcrumb.Item>\n        <Breadcrumb.Item>{note.details[0]}</Breadcrumb.Item>\n      </Breadcrumb>\n      {note.children.map((child, j)=>{\n        return(\n          <Breadcrumb key={j} style={{padding:\"2px\", marginLeft:\"6px\" }}>\n            <Breadcrumb.Item>{child.childTitle}</Breadcrumb.Item>\n            <Breadcrumb.Item>{child.childDetail}</Breadcrumb.Item>\n          </Breadcrumb>\n        )\n      })}\n    </Card>\n  )\n}\nexport default Note;\n","import React from 'react'\nimport {Container,Card, Button, Navbar, Nav, NavDropdown, Form, FormControl, } from 'react-bootstrap'\nimport {connect} from 'react-redux'\n\nimport {setVisibilityFilter} from '../actions'\n\n// import NewNoteModal from './NewNoteModal.js'\nimport Note from './Note.js'\n\n\nfunction Organizer({state}) {\n  const {notes, db} = state.crudDB\n\n  // const modalChange = () => {\n  //   console.log('hello', createList)\n  // }\n\n  return(\n    <Container>\n      <Card\n        style={{\n          color:\"white\",\n          backgroundColor:\"rgba(255,255,255,0.38)\"\n        }}>\n        {db[0].noteTitle}\n        {db[0].notes.map((note, {children}, i)=>{\n          console.log(i);\n          return <Note key={i} {...note}/>\n        })}\n      </Card>\n    </Container>\n  )\n\n}\n\n\n\n//STATE\nconst mapStateToProps = (state, ownProps) => ({\n  state\n})\n\n//DISPATCH\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onClickTriggerAction: (x) => dispatch(setVisibilityFilter(x)),\n\n})\n\n//CONNECT TO STORE\nexport default connect(mapStateToProps, mapDispatchToProps)(Organizer)\n","\n//----TODO LIST ACTIONS\n\n\n\n\n\n//ACTIONS\n\n//SHOW MODAL\nexport const setVisibilityFilter = divState => ({\n  type: 'SET_VISIBILITY_FILTER',\n  divState\n})\n\n\n//DELETE LIST\n\n//DELETE NOTE\n\n//MOVE LIST\n\n//MOVE NOTE\n\n//CREATE LIST\nexport const createList = notes => ({\n  type: 'CREATE_LIST',\n  notes\n})\n\n//CREATE NOTE\nexport const createNote = notes => ({\n  type: 'CREATE_NOTE',\n  notes\n})\n\n\n//----SETTINGS ACTIONS\n\n\n//----FAVORITES ACTIONS\n","import React from 'react';\n// import {Container, Card, Breadcrumb, Button, Image, Modal, Form, Col} from 'react-bootstrap'\n\nimport Organizer from './components/Organizer.js'\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\n\n\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"App-header\">\n        <Organizer />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux'\nimport {createStore} from 'redux'\nimport rootReducer from './reducers'\n\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(\n  rootReducer, /* preloadedState, */\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\n\n\nReactDOM.render(\n      <Provider store={store}>\n        <App />\n      </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}